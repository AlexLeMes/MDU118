// SFML_template.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <sstream>
#include <SFML/Graphics.hpp>
#include "Timber.h"

// Make code easier to type with "using namespace"
using namespace sf;

int main()
{
	hRes = 1920;
	vRes = 1080;
	VideoMode vm(hRes, vRes);
	// Create and open a window for the game RenderWindow
	RenderWindow window(vm, "No Pants!!!", Style::Fullscreen);

	InitGame();

	Clock clock;

	// Track whether the game is running
	bool paused = true;

	while (window.isOpen())
	{
		/*
		****************************************
		Handle the players input
		****************************************
		*/
		if (Keyboard::isKeyPressed(Keyboard::Escape))
		{
			window.close();
		}

		// Start the game
		if (Keyboard::isKeyPressed(Keyboard::Return))
		{
			paused = false;
		}
		/*

		/*
		****************************************
		Update the scene
		****************************************
		*/
		if (!paused)
		{
			Time dt = clock.restart();
			// Setup the bee
			if (!beeActive)
			{
				// How fast is the bee
				srand((int)time(0));
				beeSpeed = (rand() % 200) + 200;

				// How high is the bee
				srand((int)time(0) * 10);
				float height = (rand() % 500) + 500;
				spriteBee.setPosition(2000, height);
				beeActive = true;
			}
			else
				// Move the bee
			{
				spriteBee.setPosition(
					spriteBee.getPosition().x -
					(beeSpeed * dt.asSeconds()),
					spriteBee.getPosition().y);
				// Has the bee reached the right hand edge of the screen?
				if (spriteBee.getPosition().x < -100)
				{
					// Set it up ready to be a whole new cloud next frame
					beeActive = false;
				}
			}

			// Manage the clouds
			// Cloud 1
			if (!cloud1Active)
			{
				// How fast is the cloud
				srand((int)time(0) * 10);
				cloud1Speed = (rand() % 200);
				// How high is the cloud
				srand((int)time(0) * 10);
				float height = (rand() % 150);
				spriteCloud1.setPosition(-200, height);
				cloud1Active = true;
			}
			else
			{
				spriteCloud1.setPosition(
					spriteCloud1.getPosition().x +
					(cloud1Speed * dt.asSeconds()),
					spriteCloud1.getPosition().y);
				// Has the cloud reached the right hand edge of the screen?
				if (spriteCloud1.getPosition().x > hRes)
				{
					// Set it up ready to be a whole new cloud next frame
					cloud1Active = false;
				}
			}

			// Cloud 2
			if (!cloud2Active)
			{
				// How fast is the cloud
				srand((int)time(0) * 20);
				cloud2Speed = (rand() % 200);
				// How high is the cloud
				srand((int)time(0) * 20);
				float height = (rand() % 300) - 150;
				spriteCloud2.setPosition(-200, height);
				cloud2Active = true;
			}
			else
			{
				spriteCloud2.setPosition(
					spriteCloud2.getPosition().x +
					(cloud2Speed * dt.asSeconds()),
					spriteCloud2.getPosition().y);
				// Has the cloud reached the right hand edge of the screen?
				if (spriteCloud2.getPosition().x > hRes)
				{
					// Set it up ready to be a whole new cloud next frame
					cloud2Active = false;
				}
			}
			if (!cloud3Active)
			{
				// How fast is the cloud
				srand((int)time(0) * 30);
				cloud3Speed = (rand() % 200);
				// How high is the cloud
				srand((int)time(0) * 30);
				float height = (rand() % 450) - 150;
				spriteCloud3.setPosition(-200, height);
				cloud3Active = true;
			}
			else
			{
				spriteCloud3.setPosition(
					spriteCloud3.getPosition().x +
					(cloud3Speed * dt.asSeconds()),
					spriteCloud3.getPosition().y);
				// Has the cloud reached the right hand edge of the screen?
				if (spriteCloud3.getPosition().x > hRes)
				{
					// Set it up ready to be a whole new cloud next frame
					cloud3Active = false;
				}
			}
		}// End if(!paused)

		 // Update the score text
		std::stringstream ss;
		ss << "Score = " << score;
		scoreText.setString(ss.str());



		/*
		****************************************
		Draw the scene
		****************************************
		*/



		// Clear everything from the last frame     
		window.clear();

		// Draw our game scene here    
		window.draw(spriteBackground);

		// Draw the clouds
		window.draw(spriteCloud1);
		window.draw(spriteCloud2);
		window.draw(spriteCloud3);

		// Draw the tree
		window.draw(spriteTree);

		// Draw the insect
		window.draw(spriteBee);

		// Draw the score
		window.draw(scoreText);
		if (paused)
		{
			// Draw our message
			window.draw(messageText);
		}


		// Show everything we just drew     
		window.display();
	}

	return 0;
}

void InitGame()
{
	font.loadFromFile("fonts/KOMIKAP_.ttf");

	// Set the font to our message
	messageText.setFont(font);
	scoreText.setFont(font);

	// Assign the actual message
	messageText.setString("Press Enter to start!");
	scoreText.setString("Score = 0");

	// Make it really big
	messageText.setCharacterSize(75);
	scoreText.setCharacterSize(100);

	// Choose a color
	messageText.setFillColor(Color::White);

	// Draw some text
	score = 0;

	// Position the text
	FloatRect textRect = messageText.getLocalBounds();
	messageText.setOrigin(textRect.left +
		textRect.width / 2.0f,
		textRect.top +
		textRect.height / 2.0f);
	messageText.setPosition(1366 / 2.0f, 768 / 2.0f);
	scoreText.setPosition(20, 20);

	/*
	font.loadFromFile("myfont.ttf");
	// Assign the actual message
	myText.setString("Press Enter to start!");
	// assign a size
	myText.setCharacterSize(75);
	// Choose a color
	myText.setFillColor(Color::White);
	// Set the font to our Text object
	myText.setFont(font);
	*/
	// Load a graphic into the texture
	textureBackground.loadFromFile("graphics/background.png");

	// Attach the texture to the sprite
	spriteBackground.setTexture(textureBackground);

	// Set the spriteBackground to cover the screen
	spriteBackground.setPosition(0, 0);

	textureTree.loadFromFile("graphics/tree.png");
	spriteTree.setTexture(textureTree);
	spriteTree.setPosition(810, 0);

	// Prepare the bee	
	textureBee.loadFromFile("graphics/bee.png");
	spriteBee.setTexture(textureBee);
	spriteBee.setPosition(0, 800);

	// Is the bee currently moving?
	beeActive = false;

	// How fast can the bee fly
	beeSpeed = 0.0f;

	// Load 1 new texture
	textureCloud.loadFromFile("graphics/cloud.png");

	spriteCloud1.setTexture(textureCloud);
	spriteCloud2.setTexture(textureCloud);
	spriteCloud3.setTexture(textureCloud);

	// Position the clouds off screen
	spriteCloud1.setPosition(-300, 0);
	spriteCloud2.setPosition(-300, 250);
	spriteCloud3.setPosition(-300, 500);

	// Are the clouds currently on screen?
	cloud1Active = false;
	cloud2Active = false;
	cloud3Active = false;

	// How fast is each cloud?
	cloud1Speed = 0.0f;
	cloud2Speed = 0.0f;
	cloud3Speed = 0.0f;
}